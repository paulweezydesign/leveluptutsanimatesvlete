{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Box.svelte",
    "Cross.svelte",
    "Modal.svelte",
    "Nav.svelte",
    "Toast.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { onMount } from 'svelte';\n\timport { fade, blur, slide, fly, scale } from 'svelte/transition';\n\timport { custom } from './custom';\n\timport { alert } from './alert'\n\timport Modal from './Modal.svelte'\n\timport Nav from './Nav.svelte'\n\timport Toast from './Toast.svelte'\n\timport Box from './Box.svelte'\n\timport Cross from './Cross.svelte'\n\t\n\texport let name;\n\n\tlet isReady = false;\n\tlet isNavOpen = false;\n\tlet isModalOpen = false;\n\tlet isCardActive = false;\n\tlet y;\n\n\tfunction toggleNav() {\n\t\tisNavOpen = !isNavOpen;\n\t}\n\n\tfunction toggleModal() {\n\t\tisModalOpen = !isModalOpen;\n\t}\n\n\tfunction toggleAlert() {\n\t\talert.set({\n\t\t\tisActive: true,\n\t\t\ttext: \"Our new alert\"\n\t\t})\n\t}\n\n\t$: if (y > 180) {\n\t\tisCardActive = true;\n\t}\n\n</script>\n\n<!-- Fade - opacticy 0 - 1 -->\n<!-- Blur - opacticy and blur -->\n<!-- Fly - x and y along with opacity -->\n<!-- Slide - height -->\n<!-- Scale - start: scale, opactiy -->\n<!-- Draw - draw svgs -->\n\n<svelte:window bind:scrollY={y} />\n\n\n{#if isNavOpen}\n\t<Nav {toggleNav} />\n{/if}\n\n<main>\n\t<button on:click={toggleNav}>Menu</button>\n\t<button on:click={toggleAlert}>Alert</button>\n\t<button on:click={toggleModal}>Modal</button>\n\n\t<Box />\n\n\t<Cross />\n\n</main>\n\n<Toast />\n\n{#if isModalOpen}\n\t<Modal {toggleModal}>\n\t\t<p>This is in the modal</p>\n\t\t<button>Do something</button>\n\t</Modal>\n{/if}\n\n<style>\n\t.hidden {\n\t\topacity: 0;\n\t\ttransition: 0.3s ease opacity;\n\t}\n\n\t.card {\n\t\ttransition: 0.3s ease opacity;\n\t}\n\n\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>",
    "<script>\n  import { drag } from './drag';\n  import { fade } from 'svelte/transition'\n\n  let isVisible = true;\n\n  function handleDragStop(e) {\n    if(e.detail.x > 300) {\n      isVisible = false\n    }\n  }\n\n  \n\n</script>\n\n\n{#if isVisible}\n  <div \n    use:drag\n    on:click={() => {}} \n    class=\"box\"\n    on:dragStop={handleDragStop}\n  />\n{/if}\n\n<style>\n.box {\n  background: var(--primary);\n  box-shadow: var(--level-2);\n  height: 100px;\n  width: 100px;\n}\n</style>",
    "<script>\n  import { crossfade, fade } from 'svelte/transition';\n\n  let todo = [\n    {\n      id: 1,\n      isDone: false,\n      text: \"Wake Up\",\n    },\n    {\n      id: 2,\n      isDone: false,\n      text: \"Get out of bed\",\n    },\n    {\n      id: 3,\n      isDone: false,\n      text: \"Comb Hair\",\n    },\n  ];\n\n  const [ send, receive ] = crossfade({\n    fallback: fade\n  });\n\n</script>\n\n<div class=\"flex\">\n\n  <div class=\"card\">\n    <h3>Not Done</h3>\n    <ul>\n      {#each todo.filter(item => !item.isDone) as item (item.id)}\n        <li\n          in:receive={{ key: item.id }}\n          out:send={{ key: item.id }}\n        >\n          <label>\n            <input bind:checked={item.isDone} type=\"checkbox\">\n            {item.text}\n          </label>\n        </li>\n      {/each}\n    </ul>\n  </div>\n\n  <div class=\"card\">\n    <h3>Done</h3>\n    <ul>\n      {#each todo.filter(item => item.isDone) as item (item.id)}\n        <li\n          in:receive={{ key: item.id }}\n          out:send={{ key: item.id }}\n        >\n          <label>\n            <input bind:checked={item.isDone} type=\"checkbox\">\n            {item.text}\n          </label>\n        </li>\n      {/each}\n    </ul>\n  </div>\n\n</div>\n\n<style>\n  ul  {\n    margin: 0;\n    list-style: none;\n    padding: 0;\n  }\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n</style>\n",
    "<script>\n  import { scale, fly } from 'svelte/transition';\n  import { drag } from './drag';\n  export let toggleModal;\n</script>\n\n\n<div class=\"modal\">\n  <div use:drag class=\"card\" transition:fly={{y: 40}}>\n    <button on:click={toggleModal} class=\"drawer--close\">X</button>\n    <slot />\n  </div>\n  <div on:click={toggleModal} transition:scale={{ start: 1.5, duration: 1000 }} class=\"background\" />\n</div>\n\n<style>\n.modal {\n  position: fixed;\n  display: flex;\n  width: 100%;\n  height: 100%;\n  left: 0;\n  top: 0;\n  align-items: center;\n  justify-content: center;\n}\n.card {\n  position: relative;\n  text-align: center;\n}\n.background {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n  opacity: 0.8;\n  background: linear-gradient(142deg, var(--red) 3.62%, var(--green) 100%);\n}\n\n</style>",
    "<script>\n  import { fly } from 'svelte/transition';\n  export let toggleNav;\n\n</script>\n\n<nav transition:fly={{ x: 1000 }}>\n  <a on:click={toggleNav} href=\"#\">Home</a>\n  <a on:click={toggleNav} href=\"#\">About</a>\n  <a on:click={toggleNav} href=\"#\">Services</a>\n  <a on:click={toggleNav} href=\"#\">Contact</a>\n</nav>\n\n\n<style>\nnav {\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  position: fixed;\n  background: var(--black);\n  padding: 40px;\n  box-shadow: var(--level-3);\n}\n\na {\n  display: block;\n  font-size: 4em;\n  color: white;\n  font-weight: bold;\n}\n\n</style>",
    "<script>\n  import { fly } from 'svelte/transition';\n  import { alert } from './alert';\n\n  function closeAlert() {\n    alert.set({\n      text: $alert.text,\n      isActive: false\n    });\n  }\n\n  alert.subscribe(value => {\n    if(value.isActive) {\n      setTimeout(closeAlert, 2000)\n    }\n  });\n</script>\n\n\n{#if $alert.isActive}\n  <div on:click={closeAlert} transition:fly={{y: 100}} class=\"toast\">\n    <p>{$alert.text}</p>\n  </div>\n{/if}\n\n<style>\n  .toast {\n    color: white;\n    background: var(--black);\n    border-radius: var(--borderRadius);\n    padding: 20px;\n    box-shadow: var(--level-2);\n    position: fixed;\n    bottom: 10px;\n    left: 10px;\n    right: 10px;\n  }\n\n  .toast p {\n    text-align: center;\n    margin: 0;\n    max-width: 100%;\n  }\n\n</style>"
  ],
  "names": [],
  "mappings": "AAqFC,IAAI,cAAC,CAAC,AACL,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AASD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,cAAC,CAAC,AACL,SAAS,CAAE,IAAI,AAChB,CAAC,AACF,CAAC;AC5EF,IAAI,cAAC,CAAC,AACJ,UAAU,CAAE,IAAI,SAAS,CAAC,CAC1B,UAAU,CAAE,IAAI,SAAS,CAAC,CAC1B,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,KAAK,AACd,CAAC;ACkCC,EAAE,eAAE,CAAC,AACH,MAAM,CAAE,CAAC,CACT,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,CAAC,AACZ,CAAC,AAED,EAAE,eAAC,CAAC,AACF,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,AACZ,CAAC;AC3DH,MAAM,eAAC,CAAC,AACN,QAAQ,CAAE,KAAK,CACf,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,AACzB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,WAAW,eAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,EAAE,CACX,OAAO,CAAE,GAAG,CACZ,UAAU,CAAE,gBAAgB,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,AAC1E,CAAC;ACtBD,GAAG,eAAC,CAAC,AACH,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,GAAG,CAAE,CAAC,CACN,QAAQ,CAAE,KAAK,CACf,UAAU,CAAE,IAAI,OAAO,CAAC,CACxB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,SAAS,CAAC,AAC5B,CAAC,AAED,CAAC,eAAC,CAAC,AACD,OAAO,CAAE,KAAK,CACd,SAAS,CAAE,GAAG,CACd,KAAK,CAAE,KAAK,CACZ,WAAW,CAAE,IAAI,AACnB,CAAC;ACLC,MAAM,4BAAC,CAAC,AACN,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,IAAI,OAAO,CAAC,CACxB,aAAa,CAAE,IAAI,cAAc,CAAC,CAClC,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,SAAS,CAAC,CAC1B,QAAQ,CAAE,KAAK,CACf,MAAM,CAAE,IAAI,CACZ,IAAI,CAAE,IAAI,CACV,KAAK,CAAE,IAAI,AACb,CAAC,AAED,oBAAM,CAAC,CAAC,cAAC,CAAC,AACR,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,CAAC,CACT,SAAS,CAAE,IAAI,AACjB,CAAC"
}